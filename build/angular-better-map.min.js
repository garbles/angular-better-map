!function(a,b){"use strict";b.module("betterMap",[]).service("bm.Maps",["$window","$document","$q","bm.MapsExtension","bm.MapsApi",function(a,c,d,e,f){var g=d.defer(),h=c[0],i="bmMapsReadyCallback",j=h.createElement("script");return j.type="text/javascript",j.src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&callback="+i,a[i]=function(){delete a[i],b.extend(f,a.google.maps),b.extend(f,e),g.resolve(f)},h.body.appendChild(j),g.promise}]).value("bm.MapsApi",{}).value("bm.MapEventsPrefix","map_").value("bm.MarkerEventsPrefix","marker_").constant("bm.MapEvents",["bounds_changed","center_changed","click","dblclick","drag","dragend","dragstart","heading_changed","idle","maptypeid_changed","mousemove","mouseout ","mouseover","projection_changed","resize","rightclick","tilesloaded","tilt_changed","zoom_changed"]).constant("bm.MarkerEvents",["animation_changed","click","clickable_changed","cursor_changed","dblclick","drag","dragend","draggable_changed","dragstart","flat_changed","icon_changed","mousedown","mouseout","mouseover","mouseup","position_changed","rightclick","shadow_changed","shape_changed","title_changed","visible_changed","zindex_changed"]).service("bm.MapsExtension",["$parse","bm.InstanceExtension",function(a,c){return{_instances:[],newInstance:function(a,d){d=d||{};var e=new this.Map(a[0],d);return b.extend(e,c),e.element=a,this._instances.push(e),e},addEventListeners:function(a,c,d,e){var f=this;b.forEach(d,function(b){f.event.addListener(a,b,function(a){c.triggerHandler(e+b,a)})})},parseEvents:function(a,c,d){b.forEach(a,function(a,b){c.bind(b,function(){a.apply(d,arguments)})})}}}]).service("bm.InstanceExtension",["$parse","bm.MapsApi","bm.MarkerEvents","bm.MarkerEventsPrefix",function(a,b,c,d){return{_markers:[],element:null,addMarker:function(a){a=a||{},a.map=this,a.position=a.position||this.center;var e=new b.Marker(a);return b.addEventListeners(e,this.element,c,d),this._markers.push(e),e}}}]).directive("betterMap",["$q","$timeout","bm.Maps","bm.MapEvents","bm.MapEventsPrefix",function(a,b,c,d,e){return{restrict:"EA",controller:["$scope","$element",function(b,f){var g=this,h=a.defer();g.wait=[],g.mapLoaded=h.promise,c.then(function(b){a.all(g.wait).then(function(){var a=g.options||{},c=b.newInstance(f,a);h.resolve(c),b.addEventListeners(c,f,d,e)})})}]}}]).directive("bmEvents",["$q","$parse","bm.Maps",function(a,b,c){return{restrict:"A",require:"betterMap",link:function(d,e,f,g){var h=b(f.bmEvents),i=h(d);i=a.when(i),g.wait.push(i),a.all([c,i,g.mapLoaded]).then(function(a){var b=a[0],c=a[1],f=a[2];h.assign&&h.assign(d,c),b.parseEvents(c,e,f)})}}}]).directive("bmOptions",["$q","$parse",function(a,b){return{restrict:"A",require:"betterMap",link:function(c,d,e,f){var g=b(e.bmOptions),h=g(c);h=a.when(h),f.wait.push(h),h.then(function(a){g.assign&&g.assign(c,a),f.options=a})}}}]).directive("bmOnload",["$q","bm.Maps",function(a,b){return{restrict:"A",require:"betterMap",link:function(c,d,e,f){var g=c.$eval(e.bmOnload);g=a.when(g),f.wait.push(g),a.all([g,b,f.mapLoaded]).then(function(a){var b=a[0],c=(a[1],a[2]);b.call(c)})}}}])}(window,window.angular);